

html, body {
  height: 100%!important;
}

body {
  background: radial-gradient(ellipse at bottom, #1B2735 0%, #090A0F 100%);
  overflow: hidden
}

// Keyframes
@keyframes parallax {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-100vh);
  }
}

// this determines the stars number, size, probably shape, and color
@function multiple-box-shadows($stars, $size, $color) {
  $box-shadow: random(100)+'vw ' + random(100)+'vh ' + $color;
  @for $i from 1 through $stars { // 1 controls the density of stars
    $box-shadow: $box-shadow + ', ' + random(100)+'vw ' + random(100)+'vh ' + $color;
  }
  @return unquote($box-shadow);
}

@mixin parallax-layer($stars, $size: 1px, $timer: 25s, $color: white, $easing: linear) {
  $shadows: multiple-box-shadows($stars, $size, $color);
  position: absolute;
  top: 0;
  left: 0;
  width: $size;
  height: $size;
  background: transparent;
  pointer-events: none;
  box-shadow: $shadows;
  animation: parallax $timer $easing infinite;
  border-radius: 50%;
  &:after {
    content: " ";
    position: absolute;
    width: $size;
    height: $size;
    top: 100vh;
    box-shadow: $shadows;
    border-radius: 50%;
  }
}

@function starsDensity($constant) {
  $density: 100 * 2;
  @return $density;
}
// optimal view is 200 for a window width of 1920px
.stars {
  @include parallax-layer(200, 1px, 25s, white)
}
// optimal view is 50 for a window width of 1920px
.stars2 {
  @include parallax-layer(50, 3px, 50s, white)
}
// optimal view is 15 for a window width of 1920px
.stars3 {
  @include parallax-layer(15, 5px, 100s, white)
}
